<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[/*function($rootScope,$scope) {
  widget controller 
  var c = this;
	
c..selectItem = function(idx) {
		var id = c.data.notes[idx].sys_id;
		console.log('Note ID: ' + id);
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);

	$rootScope.$on('selectNote', function(event,data) { 
			console.log('Listener caught NoteID: ' + $rootScope.noteID); 
		});
}
$rootScope.$on('selectNote', function(event,data) {
			c.server.get({
				action: 'getNote',
				noteID: $rootScope.noteID
			}).then(function(r) {
				c.data.title = r.data.note.title;
				c.data.note = r.data.note.note;
				c.data.noteID = r.data.note.sys_id;
			});
		});
}
function($scope,$rootScope) {
		widget controller
		var c = this;
	
		$rootScope.$on('selectNote', function(event,data) {
			c.server.get({
				action: 'getNote',
				noteID: $rootScope.noteID
			}).then(function(r) {
				c.data.title = r.data.note.title;
				c.data.note = r.data.note.note;
				c.data.noteID = r.data.note.sys_id;
			});
		});
	} */
function($rootScope,$scope) {
	/* widget controller */
	var c = this;
	c.selectItem = function(idx) {
		var id = c.data.notes[idx].sys_id;
		console.log('Note ID: ' + id);
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[/*function() {
  populate the 'data' object 
  .g., data.table = $sp.getValue('table'); 
//(function() {
//create an array to populate with notes
data.notes = [];
var noteGR = new GlideRecord('x_snc_createnotes_note');
noteGR.addQuery('user', gs.getUser().getID());
noteGR.orderByDesc('sys_created_on');
noteGR.query();
while (noteGR.next()) {
var noteObj = {};
//use service portal helper method to get some display values
$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
//get the first 20 characters of the description
noteObj.note = noteGR.getValue('note').slice(0,20);
//push the populated obj into the array
data.notes.push(

(function() {
		populate the 'data' object 

		if (input && input.noteID) {
			var note = new GlideRecord('x_snc_createnotes_note');
			if (note.get(input.noteID)) {
				if (input.action == 'getNote') {
					data.note = {};
					$sp.getRecordValues(data.note, note, "title, note, sys_id");
				}
			}
		}
	})(); */

(function() {
//create an array to populate with notes
data.notes = [];
var noteGR = new GlideRecord('x_snc_createnotes_note');
noteGR.addQuery('user', gs.getUser().getID());
noteGR.orderByDesc('sys_created_on');
noteGR.query();
while (noteGR.next()) {
var noteObj = {};
//use service portal helper method to get some display values
$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
//get the first 20 characters of the description
noteObj.note = noteGR.getValue('note').slice(0,20);
//push the populated obj into the array
data.notes.push(noteObj);
}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-13 16:41:57</sys_created_on>
        <sys_id>249b06ec2f42d41073c1802df699b680</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_249b06ec2f42d41073c1802df699b680</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-14 07:55:58</sys_updated_on>
        <template><![CDATA[
<!-- your widget template 
  <div class="panel panel-default">
  	  <div class="panel-heading clearfix">
  	    <h3 class="panel-title pull-left">
  	      ${Notes}
  	    </h3>
  	  </div>
  	  <div class="panel-body">
  	    <p>
  	      Notes list widget
  	    </p>
  	  </div>
    <p class="list-group-item-text">
{{note.note}}
</p>
</a>
</div
</div>
<div class="panel panel-default">
<div class="panel-heading clearfix">
<h3 class="panel-title pull-left">
${Notes}
</h3>
</div>
<div class="list-group">
<a class="list-group-item" ng-click = "c.selectItem($index)" ng-="note in data.notes"> 
 


<div class="panel panel-default" ng-show="c.data.noteID">
	  <div class="panel-heading clearfix">
	    <div class="row">
	      <div class="col-md-12">
	        <input class="form-control" id="note-title" ng-model="c.data.title" />
	      </div>
	    </div>
	  </div>
	  <div class="panel-body">
	    <textarea class="form-control" id="note-body" ng-model="c.data.note" ></textarea>
	  </div>
	</div> -->

 <div class="panel panel-default">
  	  <div class="panel-heading clearfix">
  	    <h3 class="panel-title pull-right">
  	      ${Notes}
  	    </h3>
  	  </div>
  	 <div class="list-group">
<a class="list-group-item" ng-click="c.selectItem($index)" ng-repeat="note in data.notes">
<h4 class="list-group-item-heading">
{{note.title}}
</h4>
<p class="list-group-item-text">
{{note.note}}
</p>
</a>
</div>
</div>]]></template>
    </sp_widget>
</record_update>
